package viewManifiesto.manifiestoUsuario;import java.util.HashMap;import java.util.Map;import java.util.logging.Level;import java.util.logging.Logger;import javax.faces.event.ActionEvent;import javax.faces.event.ValueChangeEvent;import oracle.adf.view.rich.component.rich.RichPopup;import oracle.adf.view.rich.component.rich.data.RichTable;import oracle.adf.view.rich.component.rich.fragment.RichRegion;import oracle.adf.view.rich.component.rich.input.RichInputText;import oracle.adf.view.rich.component.rich.input.RichSelectOneChoice;import oracle.adf.view.rich.component.rich.layout.RichPanelFormLayout;import oracle.jbo.uicli.binding.JUCtrlHierNodeBinding;import view.plantilla.BasePPR;import view.utilidades.ADFUtils;import view.utilidades.Flow;/** * Objeto para dar soporte a la item de manifiesto * * @author omargo33@hotmail.com */public class PPRItemFrg extends BasePPR {    // panel de costos internacionales    private RichPanelFormLayout pfl5;    private RichInputText it3;    private RichInputText it4;    private RichInputText it5;    private RichInputText it6;    private RichInputText it7;    private RichInputText it8;    private RichInputText it9;    private RichInputText it10;    private RichInputText it11;    private RichInputText it12;    private RichInputText it13;    private RichInputText it15; //Usuario    private RichInputText it18; //Aerolinea    private RichInputText it19; //Aeropuerto    private RichInputText it20; //Aeropuerto Destino    private RichInputText it21; //Aeronave    private RichSelectOneChoice soc6;    private int it19Int = 0;    private int it20Int = 0;    private int it21Int = 0;    private RichPopup p1;    private RichPopup p2;    private RichPopup p3;    private RichPopup p4;    private RichTable resId1;    private RichTable resId2;    private RichTable resId3;    private RichTable resId4;    private RichRegion r1;    private RichRegion r2;    private RichInputText it180; // Descripcion Aerolinea    private RichInputText it190; // Descripcion Aeropuerto    private RichInputText it200; // Descripcion Aeropuerto Destino        private RichInputText it210; // Descripcion Aeronave    public PPRItemFrg() {        setNombreBundle(Flow.BUNDLE);        setPfl5(new RichPanelFormLayout());        setIt3(new RichInputText());        setIt4(new RichInputText());        setIt5(new RichInputText());        setIt6(new RichInputText());        setIt7(new RichInputText());        setIt8(new RichInputText());        setIt9(new RichInputText());        setIt10(new RichInputText());        setIt11(new RichInputText());        setIt12(new RichInputText());        getIt12().setValue("0");        setIt13(new RichInputText());        setSoc6(new RichSelectOneChoice());        try {            Object tipoVuelo = ADFUtils.evaluateEL("#{bindings.Tipo.inputValue}");            if (tipoVuelo == null) {                getPfl5().setVisible(false);            } else {                if (((String) tipoVuelo).compareToIgnoreCase("N") == 0) {                    getPfl5().setVisible(false);                } else {                    getPfl5().setVisible(true);                }            }        } catch (Exception e) {            getPfl5().setVisible(false);        }        setIt15(new RichInputText());        setIt18(new RichInputText());        setIt19(new RichInputText());        setIt20(new RichInputText());        setIt21(new RichInputText());        setIt180(new RichInputText());        setIt190(new RichInputText());        setIt200(new RichInputText());        setIt210(new RichInputText());        setResId1(new RichTable());        setResId2(new RichTable());        setResId3(new RichTable());        setResId4(new RichTable());        setR1(new RichRegion());        setR2(new RichRegion());                    }    /** Metodo para presentar la informacion seleccion.     *     * @param valueChangeEvent     */    public void nacionalInternacional(ValueChangeEvent valueChangeEvent) {        Object value = valueChangeEvent.getNewValue();        if (value != null) {            if (String.valueOf(value).compareToIgnoreCase("N") == 0) {                getIt10().setValue("0");                getIt12().setValue("0");                getPfl5().setVisible(false);                doPartialRefresh(getPfl5());            }            if (String.valueOf(value).compareToIgnoreCase("I") == 0) {                getPfl5().setVisible(true);                doPartialRefresh(getPfl5());            }        }    }    /**     * Value it3     *     * @param valueChangeEvent     */    public void valueChangeIt3(ValueChangeEvent valueChangeEvent) {        doPartialRefresh(getIt4());        doPartialRefresh(getIt5());        doPartialRefresh(getIt6());        doPartialRefresh(getIt7());        doPartialRefresh(getIt8());        doPartialRefresh(getIt9());        doPartialRefresh(getIt10());        doPartialRefresh(getIt11());        doPartialRefresh(getIt12());        doPartialRefresh(getIt13());    }    /**     * Value it4     *     * @param valueChangeEvent     */    public void valueChangeIt4(ValueChangeEvent valueChangeEvent) {        doPartialRefresh(getIt5());        doPartialRefresh(getIt6());        doPartialRefresh(getIt7());        doPartialRefresh(getIt8());        doPartialRefresh(getIt9());        doPartialRefresh(getIt10());        doPartialRefresh(getIt11());        doPartialRefresh(getIt12());        doPartialRefresh(getIt13());    }    /**     * Value it5     *     * @param valueChangeEvent     */    public void valueChangeIt5(ValueChangeEvent valueChangeEvent) {        doPartialRefresh(getIt6());        doPartialRefresh(getIt7());        doPartialRefresh(getIt8());        doPartialRefresh(getIt9());        doPartialRefresh(getIt10());        doPartialRefresh(getIt11());        doPartialRefresh(getIt12());        doPartialRefresh(getIt13());    }    /**     * Value it6     *     * @param valueChangeEvent     */    public void valueChangeIt6(ValueChangeEvent valueChangeEvent) {        doPartialRefresh(getIt7());        doPartialRefresh(getIt8());        doPartialRefresh(getIt9());        doPartialRefresh(getIt10());        doPartialRefresh(getIt11());        doPartialRefresh(getIt12());        doPartialRefresh(getIt13());    }    /**     * Value it7     *     * @param valueChangeEvent     */    public void valueChangeIt7(ValueChangeEvent valueChangeEvent) {        doPartialRefresh(getIt8());        doPartialRefresh(getIt9());        doPartialRefresh(getIt10());        doPartialRefresh(getIt11());        doPartialRefresh(getIt12());        doPartialRefresh(getIt13());    }    /**     * Value it8     *     * @param valueChangeEvent     */    public void valueChangeIt8(ValueChangeEvent valueChangeEvent) {        doPartialRefresh(getIt9());        doPartialRefresh(getIt10());        doPartialRefresh(getIt11());        doPartialRefresh(getIt12());        doPartialRefresh(getIt13());    }    /**     * Value it9     *     * @param valueChangeEvent     */    public void valueChangeIt9(ValueChangeEvent valueChangeEvent) {        doPartialRefresh(getIt10());        doPartialRefresh(getIt11());        doPartialRefresh(getIt12());        doPartialRefresh(getIt13());    }    /**     * Value it10     *     * @param valueChangeEvent     */    public void valueChangeIt10(ValueChangeEvent valueChangeEvent) {        getIt12().setValue("0");        doPartialRefresh(getIt11());        doPartialRefresh(getIt12());        doPartialRefresh(getIt13());    }    /**     * Value it11     *     * @param valueChangeEvent     */    public void valueChangeIt11(ValueChangeEvent valueChangeEvent) {        doPartialRefresh(getIt12());        doPartialRefresh(getIt13());    }    /**     * Value it12     *     * @param valueChangeEvent     */    public void valueChangeIt12(ValueChangeEvent valueChangeEvent) {        doPartialRefresh(getIt13());    }    public void valueChangeIt20(ValueChangeEvent valueChangeEvent) {        Map map = new HashMap<String, Object>();        map.put("indice", convertirInt(valueChangeEvent.getNewValue()));        Object respuesta =            ADFUtils.ejecutaActionConReturn(getBindings(), "ejecutarByIndiceReturn_AeropuertoDestino", true, map);        getIt200().setValue(respuesta);        doPartialRefresh(getIt200());    }    public void valueChangeIt21(ValueChangeEvent valueChangeEvent) {        Map map = new HashMap<String, Object>();        map.put("indice", convertirInt(valueChangeEvent.getNewValue()));        Object respuesta = ADFUtils.ejecutaActionConReturn(getBindings(), "ejecutarByIndiceReturn_Aeronave", true, map);        getIt210().setValue(respuesta);        doPartialRefresh(getIt210());    }    /**     * Metodo para calcular los objetos del sitema.     *     * @param arg1     * @param arg2     * @return     */    private String valueResta(RichInputText arg1, RichInputText arg2) {        if (arg1 == null) {            arg1 = new RichInputText();            arg1.setValue("0");        }        if (arg2 == null) {            arg2 = new RichInputText();            arg2.setValue("0");        }        if (arg1.getValue() == null) {            arg1 = new RichInputText();            arg1.setValue("0");        }        if (arg2.getValue() == null) {            arg2 = new RichInputText();            arg2.setValue("0");        }        int arg1Int = Integer.valueOf((String) arg1.getValue());        int arg2Int = Integer.valueOf((String) arg2.getValue());        int argRespuesta = arg1Int - arg2Int;        return String.valueOf(argRespuesta);    }    public void accionSeleccionar1(ActionEvent actionEvent) {        getP1().hide();        doPartialRefresh(getP1());        JUCtrlHierNodeBinding nodeBinding = (JUCtrlHierNodeBinding) getResId1().getSelectedRowData();        String descripcion =            String.valueOf(nodeBinding.getAttribute("IndiceSecundario")) + " " +            String.valueOf(nodeBinding.getAttribute("Nombre"));        String indice = String.valueOf(nodeBinding.getAttribute("Indice"));        getIt20().setValue(indice);        getIt200().setValue(descripcion);        ADFUtils.setEL("#{bindings.IdLibroDireccionAeropuertoDes.inputValue}", indice);        doPartialRefresh(getIt20());        doPartialRefresh(getIt200());    }    public void accionSeleccionar2(ActionEvent actionEvent) {        getP2().hide();        doPartialRefresh(getP2());        JUCtrlHierNodeBinding nodeBinding = (JUCtrlHierNodeBinding) getResId2().getSelectedRowData();        String descripcion =            String.valueOf(nodeBinding.getAttribute("IndiceSecundario")) + " " +            String.valueOf(nodeBinding.getAttribute("Nombre"));        String indice = String.valueOf(nodeBinding.getAttribute("Indice"));        ADFUtils.setEL("#{bindings.IdLibroDireccionAeronave.inputValue}", indice);        getIt21().setValue(indice);        getIt210().setValue(descripcion);        doPartialRefresh(getIt21());        doPartialRefresh(getIt210());    }    public void accionSeleccionar3(ActionEvent actionEvent) {        getP3().hide();        doPartialRefresh(getP3());        JUCtrlHierNodeBinding nodeBinding = (JUCtrlHierNodeBinding) getResId3().getSelectedRowData();        String descripcion =            String.valueOf(nodeBinding.getAttribute("IndiceSecundario")) + " " +            String.valueOf(nodeBinding.getAttribute("Nombre"));        String indice = String.valueOf(nodeBinding.getAttribute("Indice"));        ADFUtils.setEL("#{bindings.IdLibroDireccionAeropuerto.inputValue}", indice);        getIt19().setValue(indice);        getIt190().setValue(descripcion);        doPartialRefresh(getIt19());        doPartialRefresh(getIt190());    }    public void accionSeleccionar4(ActionEvent actionEvent) {        getP4().hide();        doPartialRefresh(getP4());        JUCtrlHierNodeBinding nodeBinding = (JUCtrlHierNodeBinding) getResId4().getSelectedRowData();        String descripcion =            String.valueOf(nodeBinding.getAttribute("IndiceSecundario")) + " " +            String.valueOf(nodeBinding.getAttribute("Nombre"));        String indice = String.valueOf(nodeBinding.getAttribute("Indice"));        ADFUtils.setEL("#{bindings.IdLibroDireccionAerolinea.inputValue}", indice);        getIt18().setValue(indice);        getIt180().setValue(descripcion);        doPartialRefresh(getIt18());        doPartialRefresh(getIt180());    }    /**     * Accion Guardar.     *     * @return     */    public String actionGuardar() {        boolean estado = true;        if (getIt19() == null || getIt19().getValue() == null || String.valueOf(getIt19().getValue())                                                                       .trim()                                                                       .length() == 0) {            estado = false;            ADFUtils.setMensajeError("No ha sido Seleccionado el Aeropuerto Origen");        }        if (getIt20() == null || getIt20().getValue() == null || String.valueOf(getIt20().getValue())                                                                       .trim()                                                                       .length() == 0) {            estado = false;            ADFUtils.setMensajeError("No ha sido Seleccionado el Aeropuerto Destino");        }        if (getIt21() == null || getIt21().getValue() == null || String.valueOf(getIt21().getValue())                                                                       .trim()                                                                       .length() == 0) {            estado = false;            ADFUtils.setMensajeError("No ha sido Seleccionado la Matricula de la Aeronave");        }        if (estado) {            if (ADFUtils.commitRollback(getBindings(), Flow.ACCION_COMMIT, Flow.ACCION_ROLLBACK,                                        getBundle("msg_guardar_ko"), getBundle("msg_guardar_ok"))) {                setAccionEstadoTaskFlow(TASK_FLOW_EDITAR);                getR1().setRendered(true);                getR2().setRendered(true);                doPartialRefresh(getR1().getParent());                doPartialRefresh(getR2().getParent());                Logger.getLogger(Logger.GLOBAL_LOGGER_NAME).log(Level.SEVERE, "actualizao region=yes");                return Flow.FLOW_NULL;            }            return Flow.FLOW_INICIO;        } else {            return Flow.FLOW_NULL;        }    }    //Propiedades    public void setSoc6(RichSelectOneChoice soc6) {        this.soc6 = soc6;    }    public RichSelectOneChoice getSoc6() {        return soc6;    }    public RichInputText getIt15() {        return it15;    }    public void setIt15(RichInputText it15) {        this.it15 = it15;    }    public RichInputText getIt18() {        return it18;    }    public void setIt18(RichInputText it18) {        this.it18 = it18;    }    public RichInputText getIt19() {        return it19;    }    public void setIt19(RichInputText it19) {        this.it19 = it19;    }    public RichInputText getIt20() {        return it20;    }    public void setIt20(RichInputText it20) {        this.it20 = it20;    }    public RichInputText getIt21() {        return it21;    }    public void setIt21(RichInputText it21) {        this.it21 = it21;    }    public int getIt19Int() {        return it19Int;    }    public void setIt19Int(int it19Int) {        this.it19Int = it19Int;        getIt19().setValue(it19Int);        doPartialRefresh(getIt19());    }    public int getIt20Int() {        return it20Int;    }    public void setIt20Int(int it20Int) {        this.it20Int = it20Int;        getIt20().setValue(it20Int);        doPartialRefresh(getIt20());    }    public int getIt21Int() {        return it21Int;    }    public void setIt21Int(int it21Int) {        this.it21Int = it21Int;        getIt21().setValue(it21Int);        doPartialRefresh(getIt21());    }    public void setPfl5(RichPanelFormLayout panelFormInternacional) {        this.pfl5 = panelFormInternacional;    }    public RichPanelFormLayout getPfl5() {        return pfl5;    }    public void setIt3(RichInputText it3) {        this.it3 = it3;    }    public RichInputText getIt3() {        return it3;    }    public void setIt4(RichInputText it4) {        this.it4 = it4;    }    public RichInputText getIt4() {        return it4;    }    public void setIt5(RichInputText it5) {        this.it5 = it5;    }    public RichInputText getIt5() {        it5.setValue(valueResta(getIt3(), getIt4()));        return it5;    }    public void setIt6(RichInputText it6) {        this.it6 = it6;    }    public RichInputText getIt6() {        return it6;    }    public void setIt7(RichInputText it7) {        this.it7 = it7;    }    public RichInputText getIt7() {        it7.setValue(valueResta(getIt5(), getIt6()));        return it7;    }    public void setIt8(RichInputText it8) {        this.it8 = it8;    }    public RichInputText getIt8() {        return it8;    }    public void setIt9(RichInputText it9) {        this.it9 = it9;    }    public RichInputText getIt9() {        it9.setValue(valueResta(getIt7(), getIt8()));        return it9;    }    public void setIt10(RichInputText it10) {        this.it10 = it10;    }    public RichInputText getIt10() {        return it10;    }    public void setIt11(RichInputText it11) {        this.it11 = it11;    }    public RichInputText getIt11() {        it11.setValue(valueResta(getIt5(), getIt10()));        return it11;    }    public void setIt12(RichInputText it12) {        this.it12 = it12;    }    public RichInputText getIt12() {        return it12;    }    public void setIt13(RichInputText it13) {        this.it13 = it13;    }    public RichInputText getIt13() {        it13.setValue(valueResta(getIt11(), getIt12()));        return it13;    }    public void setIt200(RichInputText it200) {        this.it200 = it200;    }    public RichInputText getIt200() {        return it200;    }    public void setIt210(RichInputText it210) {        this.it210 = it210;    }    public RichInputText getIt210() {        return it210;    }    public void setP1(RichPopup p1) {        this.p1 = p1;    }    public RichPopup getP1() {        return p1;    }    public void setP2(RichPopup p2) {        this.p2 = p2;    }    public RichPopup getP2() {        return p2;    }    public void setP3(RichPopup p3) {        this.p3 = p3;    }    public RichPopup getP3() {        return p3;    }        public void setP4(RichPopup p4) {        this.p4 = p4;    }    public RichPopup getP4() {        return p4;    }    public void setResId1(RichTable resId1) {        this.resId1 = resId1;    }    public RichTable getResId1() {        return resId1;    }    public void setResId2(RichTable resId2) {        this.resId2 = resId2;    }    public RichTable getResId2() {        return resId2;    }    public void setResId3(RichTable resId3) {        this.resId3 = resId3;    }    public RichTable getResId3() {        return resId3;    }    public void setR1(RichRegion r1) {        this.r1 = r1;    }    public RichRegion getR1() {        return r1;    }    public void setR2(RichRegion r2) {        this.r2 = r2;    }    public RichRegion getR2() {        return r2;    }    public void setIt190(RichInputText it190) {        this.it190 = it190;    }    public RichInputText getIt190() {        return it190;    }    /**     * Metodo para verificar si se puede crear     *     * @return     */    public boolean isCrear() {        return verificarPermiso("#{pageFlowScope.pPermisoCrear}");    }    /**     * Metodo para verificar si se puede actualizar     *     * @return     */    public boolean isActualizar() {        return verificarPermiso("#{pageFlowScope.pPermisoActualizar}");    }    /**     * Metodo para verificar si se puede borrar     *     * @return     */    public boolean isBorrar() {        return verificarPermiso("#{pageFlowScope.pPermisoBorrar}");    }    /**     * Metodo para verificar estado con la busqueda del permiso.     *     * @param permiso     * @return     */    private boolean verificarPermiso(String permiso) {        boolean flag = true;        try {            Object estado = ADFUtils.evaluateEL("#{bindings.Estado.inputValue}");            flag = ((String) estado).compareToIgnoreCase("C") == 0;            if (flag) {                flag = (Boolean) ADFUtils.evaluateEL(permiso);            }        } catch (Exception e) {            flag = true;        }        return flag;    }    public RichTable getResId4() {        return resId4;    }    public void setResId4(RichTable resId4) {        this.resId4 = resId4;    }    public RichInputText getIt180() {        return it180;    }    public void setIt180(RichInputText it180) {        this.it180 = it180;    }}