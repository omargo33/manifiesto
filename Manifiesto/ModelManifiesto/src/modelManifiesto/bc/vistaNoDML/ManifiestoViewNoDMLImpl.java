package modelManifiesto.bc.vistaNoDML;

import java.sql.Timestamp;


import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

import model.bc.VistaObjeto;

import modelManifiesto.bc.vistaNoDML.common.ManifiestoViewNoDML;

import oracle.jbo.VariableValueManager;
import oracle.jbo.ViewCriteria;
import modelManifiesto.utilidades.GenerarSqlManifiesto;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 14 12:48:31 ECT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ManifiestoViewNoDMLImpl extends VistaObjeto implements ManifiestoViewNoDML {
    /**
     * This is the default constructor (do not remove).
     */
    public ManifiestoViewNoDMLImpl() {
        super();
    }

    /**
     * Metodo para iniciar la lista sin consultas previas.
     *
     */
    public void inicioVacio() {
        ViewCriteria vc = this.getViewCriteriaManager().getViewCriteria("ManifiestoViewNoDMLCriteria");
        VariableValueManager vvm = vc.ensureVariableManager();
        vvm.setVariableValue("v_IdUsuario", 0);
        this.applyViewCriteria(vc, false);
        this.executeQuery();
        this.setApplyViewCriteriaName(null);
    }

    /**
     * Metodo para iniciar los manifiestos previos a la pre liquidacion
     */
    public void inicioVacioPreliquidacion() {
        ViewCriteria vc = this.getViewCriteriaManager().getViewCriteria("ManifiestoViewPreliquidacionNoDMLCriteria");
        VariableValueManager vvm = vc.ensureVariableManager();
        vvm.setVariableValue("v_IdUsuario", 0);
        this.applyViewCriteria(vc, false);
        this.executeQuery();
        this.setApplyViewCriteriaName(null);
    }

    /**
     * Metodo para ejecutar una busqueda de manifiesto general.
     *
     * @param indiceAerolinea
     * @param indiceAeropuertoOrigen
     * @param indiceAeropuertoDestino
     * @param indiceAeronave
     * @param noVuelo
     * @param fechaInicio
     * @param fechaFin
     */
    public void ejecutarConsulta(int idUsuario, int indiceAerolinea, int indiceAeropuertoOrigen,
                                 int indiceAeropuertoDestino, int indiceAeronave, String noVuelo, String fechaInicio,
                                 String fechaFin) {

        java.sql.Date fechaSQLInicio = GenerarSqlManifiesto.convertirDate(fechaInicio);
        java.sql.Date fechaSQLFin = GenerarSqlManifiesto.convertirDate(fechaFin);

        ViewCriteria vc = this.getViewCriteriaManager().getViewCriteria("ManifiestoViewNoDMLCriteria");
        VariableValueManager vvm = vc.ensureVariableManager();


        if (idUsuario > 0) {
            vvm.setVariableValue("v_IdUsuario", idUsuario);
        } else {
            vvm.setVariableValue("v_IdUsuario", null);
        }
        if (indiceAerolinea > 0) {
            vvm.setVariableValue("v_IndiceAerolinea", indiceAerolinea);
        } else {
            vvm.setVariableValue("v_IndiceAerolinea", null);
        }
        if (indiceAeropuertoOrigen > 0) {
            vvm.setVariableValue("v_IndiceAeropuertoOrigen", indiceAeropuertoOrigen);
        } else {
            vvm.setVariableValue("v_IndiceAeropuertoOrigen", null);
        }
        if (indiceAeropuertoDestino > 0) {
            vvm.setVariableValue("v_IndiceAeropuertoDestino", indiceAeropuertoDestino);
        } else {
            vvm.setVariableValue("v_IndiceAeropuertoDestino", null);
        }
        if (indiceAeronave > 0) {
            vvm.setVariableValue("v_IndiceAeronave", indiceAeronave);
        } else {
            vvm.setVariableValue("v_IndiceAeronave", null);
        }
        if (noVuelo != null && noVuelo.trim().length() > 0 && noVuelo.compareTo("0") != 0) {
            vvm.setVariableValue("v_NoVuelo", noVuelo);
        } else {
            vvm.setVariableValue("v_NoVuelo", null);
        }

        if (fechaSQLInicio != null && fechaSQLFin != null) {
            vvm.setVariableValue("v_FechaInicio", fechaSQLInicio);
            vvm.setVariableValue("v_FechaFin", fechaSQLFin);
        } else {
            vvm.setVariableValue("v_FechaInicio", new java.sql.Date(new Date().getTime() - (15 * 24 * 60 * 60 * 1000)));
            vvm.setVariableValue("v_FechaFin", new java.sql.Date(new Date().getTime() + (5 * 60 * 1000)));
        }

        this.applyViewCriteria(vc, false);
        this.executeQuery();
        this.setApplyViewCriteriaName(null);
    }


    /**
     * Metodo para hacer una consulta extendida de los cierres de vuelo.
     * @param idUsuario
     * @param indiceAerolinea
     * @param indiceAeropuertoOrigen
     * @param indiceAeropuertoDestino
     * @param indiceAeronave
     * @param noVuelo
     * @param fechaInicio
     * @param fechaFin
     * @param idManifiesto
     * @param estado    (estado)Estado del manifiesto y procesos internos JDE
     * @param tipoVuelo    (tipo)Tipo de vuelo I=vuelo internacional, N=Vuelo Nacional
     * @param tipoObservacion   (cancelado)Si el vuelo ha sido cancelado con la N = Normal y C=Cancelado
     */
    public void ejecutarConsultaExtendida(int idUsuario, int indiceAerolinea, int indiceAeropuertoOrigen,
                                          int indiceAeropuertoDestino, int indiceAeronave, String noVuelo,
                                          String fechaInicio, String fechaFin, String idManifiesto, String estado,
                                          String tipoVuelo, String tipoObservacion) {
        String sqlOriginal = this.getQuery();
        
        String sql =
            GenerarSqlManifiesto.generarSQLExtendido(sqlOriginal , idUsuario, indiceAerolinea,
                                                     indiceAeropuertoOrigen, indiceAeropuertoDestino,
                                                     indiceAeronave, noVuelo, fechaInicio, fechaFin, idManifiesto,
                                                     estado, tipoVuelo, tipoObservacion);
            
        this.setQuery(sql);
        this.executeQuery();
        this.setQuery(sqlOriginal);        
    }

    /**
     * Metodo para ejecutar una busqueda de manifiesto para preliquidacion.
     *
     * @param indiceAerolinea
     * @param indiceAeropuertoOrigen
     * @param indiceAeropuertoDestino
     * @param indiceAeronave
     * @param noVuelo
     * @param fechaInicio
     * @param fechaFin
     */
    public void ejecutarConsultaPreliquidacion(int idUsuario, int indiceAerolinea, int indiceAeropuertoOrigen,
                                               int indiceAeropuertoDestino, int indiceAeronave, String noVuelo,
                                               String fechaInicio, String fechaFin) {

        java.sql.Date fechaSQLInicio = GenerarSqlManifiesto.convertirDate(fechaInicio);
        java.sql.Date fechaSQLFin = GenerarSqlManifiesto.convertirDate(fechaFin);

        ViewCriteria vc = this.getViewCriteriaManager().getViewCriteria("ManifiestoViewPreliquidacionNoDMLCriteria");
        VariableValueManager vvm = vc.ensureVariableManager();


        if (idUsuario > 0) {
            vvm.setVariableValue("v_IdUsuario", idUsuario);
        } else {
            vvm.setVariableValue("v_IdUsuario", null);
        }
        if (indiceAerolinea > 0) {
            vvm.setVariableValue("v_IndiceAerolinea", indiceAerolinea);
        } else {
            vvm.setVariableValue("v_IndiceAerolinea", null);
        }
        if (indiceAeropuertoOrigen > 0) {
            vvm.setVariableValue("v_IndiceAeropuertoOrigen", indiceAeropuertoOrigen);
        } else {
            vvm.setVariableValue("v_IndiceAeropuertoOrigen", null);
        }
        if (indiceAeropuertoDestino > 0) {
            vvm.setVariableValue("v_IndiceAeropuertoDestino", indiceAeropuertoDestino);
        } else {
            vvm.setVariableValue("v_IndiceAeropuertoDestino", null);
        }
        if (indiceAeronave > 0) {
            vvm.setVariableValue("v_IndiceAeronave", indiceAeronave);
        } else {
            vvm.setVariableValue("v_IndiceAeronave", null);
        }
        if (noVuelo != null && noVuelo.trim().length() > 0 && noVuelo.compareTo("0") != 0) {
            vvm.setVariableValue("v_NoVuelo", noVuelo);
        } else {
            vvm.setVariableValue("v_NoVuelo", null);
        }

        if (fechaSQLInicio != null && fechaSQLFin != null) {
            vvm.setVariableValue("v_FechaInicio", fechaSQLInicio);
            vvm.setVariableValue("v_FechaFin", fechaSQLFin);
        } else {
            vvm.setVariableValue("v_FechaInicio", new java.sql.Date(new Date().getTime() - (15 * 24 * 60 * 60 * 1000)));
            vvm.setVariableValue("v_FechaFin", new java.sql.Date(new Date().getTime() + (5 * 60 * 1000)));
        }

        this.applyViewCriteria(vc, false);
        this.executeQuery();
        this.setApplyViewCriteriaName(null);

    }


    public void ejecutarConsultaErrorJDE() {
        ViewCriteria vc = getViewCriteriaManager().getViewCriteria("ManifiestoViewNoDMLCriteriaErrorRest");

        applyViewCriteria(vc, false);
        executeQuery();
        setApplyViewCriteriaName(null);
    }

    /**
     * Metodo para cargar valores por default para busquedas.
     */
    public void cargarValoresDefaultBusqueda01(String idUsuario) {
        java.sql.Timestamp fechaInicio = new Timestamp(new java.util.Date().getTime() - (24 * 60 * 60 * 1000));
        java.sql.Timestamp fechaFin = new Timestamp(new java.util.Date().getTime() + (5 * 60 * 1000));
        this.ensureVariableManager().setVariableValue("v_FechaInicioCompleta", fechaInicio);
        this.ensureVariableManager().setVariableValue("v_FechaFinCompleta", fechaFin);
        this.ensureVariableManager().setVariableValue("v_IdUsuario", idUsuario);
        this.ensureVariableManager().setVariableValue("v_Estado", "C");
    }


    /**
     * Metodo para cargar valores por default para busquedas.
     */
    public void cargarValoresDefaultBusqueda02(String idUsuario) {
        java.sql.Date fechaInicio = new java.sql.Date(new java.util.Date().getTime() - (24 * 60 * 60 * 1000));
        java.sql.Date fechaFin = new java.sql.Date(new java.util.Date().getTime() + (5 * 60 * 1000));
        this.ensureVariableManager().setVariableValue("v_FechaInicioCompleta", fechaInicio);
        this.ensureVariableManager().setVariableValue("v_FechaFinCompleta", fechaFin);
        this.ensureVariableManager().setVariableValue("v_IdUsuario", idUsuario);
        this.ensureVariableManager().setVariableValue("v_Estado", "C");
    }


}

